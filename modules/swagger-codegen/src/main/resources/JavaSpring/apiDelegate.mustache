package {{package}};

{{#imports}}import {{import}};
{{/imports}}

import io.swagger.annotations.*;{{#jdk8}}
import org.springframework.http.HttpStatus;{{/jdk8}}
import org.springframework.http.ResponseEntity;
import org.springframework.web.multipart.MultipartFile;

import java.util.List;
{{#async}}
import java.util.concurrent.{{^jdk8}}Callable{{/jdk8}}{{#jdk8}}CompletableFuture{{/jdk8}};
{{/async}}

{{#operations}}
/**
 * A delegate to be called by the {@link {{classname}}Controller}}.
 * Should be implemented as a controller but without the {@link org.springframework.stereotype.Controller} annotation.
 * Instead, use spring to autowire this class into the {@link {{classname}}Controller}.
 */
{{>generatedAnnotation}}
public interface {{classname}}Delegate {

{{#operation}}
    /**
    * @see {{classname}}#{{operationId}}
    */
    {{#jdk8}}default {{/jdk8}}ResponseEntity<{{>returnTypes}}> {{operationId}}({{#allParams}}
            {{^isFile}}{{{dataType}}}{{/isFile}}{{#isFile}}MultipartFile{{/isFile}} {{paramName}}{{#hasMore}},{{/hasMore}}{{/allParams}}){{^jdk8}};{{/jdk8}}{{#jdk8}} {
        // do some magic!
        return new ResponseEntity<{{>returnTypes}}>(HttpStatus.OK);
    }{{/jdk8}}{{#async}}

    /**
    * @see {{classname}}#{{operationId}}
    */
    {{#jdk8}}default {{/jdk8}}{{#responseWrapper}}{{.}}<{{/responseWrapper}}ResponseEntity<{{>returnTypes}}>{{#responseWrapper}}>{{/responseWrapper}} {{operationId}}Async({{#allParams}}
            {{^isFile}}{{{dataType}}}{{/isFile}}{{#isFile}}MultipartFile{{/isFile}} {{paramName}}{{#hasMore}},{{/hasMore}}{{/allParams}}){{^jdk8}};{{/jdk8}}{{#jdk8}} {
        // do some magic!
        return CompletableFuture.completedFuture({{operationId}}({{#allParams}}{{paramName}}{{#hasMore}}, {{/hasMore}}{{/allParams}}));
    }{{/jdk8}}{{/async}}

{{/operation}}
}
{{/operations}}
